// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: collection.proto

package com.akkw.protobuf.test.ptoto;

public final class CollectionProto {
  private CollectionProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface CollectionTypeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.akkw.protobuf.test.ptoto.CollectionType)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated int64 aLong = 1;</code>
     * @return A list containing the aLong.
     */
    java.util.List<java.lang.Long> getALongList();
    /**
     * <code>repeated int64 aLong = 1;</code>
     * @return The count of aLong.
     */
    int getALongCount();
    /**
     * <code>repeated int64 aLong = 1;</code>
     * @param index The index of the element to return.
     * @return The aLong at the given index.
     */
    long getALong(int index);

    /**
     * <code>repeated int32 aInt = 2;</code>
     * @return A list containing the aInt.
     */
    java.util.List<java.lang.Integer> getAIntList();
    /**
     * <code>repeated int32 aInt = 2;</code>
     * @return The count of aInt.
     */
    int getAIntCount();
    /**
     * <code>repeated int32 aInt = 2;</code>
     * @param index The index of the element to return.
     * @return The aInt at the given index.
     */
    int getAInt(int index);

    /**
     * <code>repeated bool aBoolean = 3;</code>
     * @return A list containing the aBoolean.
     */
    java.util.List<java.lang.Boolean> getABooleanList();
    /**
     * <code>repeated bool aBoolean = 3;</code>
     * @return The count of aBoolean.
     */
    int getABooleanCount();
    /**
     * <code>repeated bool aBoolean = 3;</code>
     * @param index The index of the element to return.
     * @return The aBoolean at the given index.
     */
    boolean getABoolean(int index);

    /**
     * <code>repeated string aString = 4;</code>
     * @return A list containing the aString.
     */
    java.util.List<java.lang.String>
        getAStringList();
    /**
     * <code>repeated string aString = 4;</code>
     * @return The count of aString.
     */
    int getAStringCount();
    /**
     * <code>repeated string aString = 4;</code>
     * @param index The index of the element to return.
     * @return The aString at the given index.
     */
    java.lang.String getAString(int index);
    /**
     * <code>repeated string aString = 4;</code>
     * @param index The index of the value to return.
     * @return The bytes of the aString at the given index.
     */
    com.google.protobuf.ByteString
        getAStringBytes(int index);

    /**
     * <code>repeated double aDouble = 5;</code>
     * @return A list containing the aDouble.
     */
    java.util.List<java.lang.Double> getADoubleList();
    /**
     * <code>repeated double aDouble = 5;</code>
     * @return The count of aDouble.
     */
    int getADoubleCount();
    /**
     * <code>repeated double aDouble = 5;</code>
     * @param index The index of the element to return.
     * @return The aDouble at the given index.
     */
    double getADouble(int index);

    /**
     * <code>repeated float aFloat = 6;</code>
     * @return A list containing the aFloat.
     */
    java.util.List<java.lang.Float> getAFloatList();
    /**
     * <code>repeated float aFloat = 6;</code>
     * @return The count of aFloat.
     */
    int getAFloatCount();
    /**
     * <code>repeated float aFloat = 6;</code>
     * @param index The index of the element to return.
     * @return The aFloat at the given index.
     */
    float getAFloat(int index);

    /**
     * <code>map&lt;int64, int32&gt; intMap = 7;</code>
     */
    int getIntMapCount();
    /**
     * <code>map&lt;int64, int32&gt; intMap = 7;</code>
     */
    boolean containsIntMap(
        long key);
    /**
     * Use {@link #getIntMapMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Long, java.lang.Integer>
    getIntMap();
    /**
     * <code>map&lt;int64, int32&gt; intMap = 7;</code>
     */
    java.util.Map<java.lang.Long, java.lang.Integer>
    getIntMapMap();
    /**
     * <code>map&lt;int64, int32&gt; intMap = 7;</code>
     */

    int getIntMapOrDefault(
        long key,
        int defaultValue);
    /**
     * <code>map&lt;int64, int32&gt; intMap = 7;</code>
     */

    int getIntMapOrThrow(
        long key);

    /**
     * <code>map&lt;bool, int32&gt; booleanMap = 8;</code>
     */
    int getBooleanMapCount();
    /**
     * <code>map&lt;bool, int32&gt; booleanMap = 8;</code>
     */
    boolean containsBooleanMap(
        boolean key);
    /**
     * Use {@link #getBooleanMapMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Boolean, java.lang.Integer>
    getBooleanMap();
    /**
     * <code>map&lt;bool, int32&gt; booleanMap = 8;</code>
     */
    java.util.Map<java.lang.Boolean, java.lang.Integer>
    getBooleanMapMap();
    /**
     * <code>map&lt;bool, int32&gt; booleanMap = 8;</code>
     */

    int getBooleanMapOrDefault(
        boolean key,
        int defaultValue);
    /**
     * <code>map&lt;bool, int32&gt; booleanMap = 8;</code>
     */

    int getBooleanMapOrThrow(
        boolean key);

    /**
     * <code>map&lt;int32, double&gt; floatMap = 9;</code>
     */
    int getFloatMapCount();
    /**
     * <code>map&lt;int32, double&gt; floatMap = 9;</code>
     */
    boolean containsFloatMap(
        int key);
    /**
     * Use {@link #getFloatMapMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Double>
    getFloatMap();
    /**
     * <code>map&lt;int32, double&gt; floatMap = 9;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Double>
    getFloatMapMap();
    /**
     * <code>map&lt;int32, double&gt; floatMap = 9;</code>
     */

    double getFloatMapOrDefault(
        int key,
        double defaultValue);
    /**
     * <code>map&lt;int32, double&gt; floatMap = 9;</code>
     */

    double getFloatMapOrThrow(
        int key);
  }
  /**
   * <pre>
   *创建一个 User 对象
   * </pre>
   *
   * Protobuf type {@code com.akkw.protobuf.test.ptoto.CollectionType}
   */
  public static final class CollectionType extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.akkw.protobuf.test.ptoto.CollectionType)
      CollectionTypeOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CollectionType.newBuilder() to construct.
    private CollectionType(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CollectionType() {
      aLong_ = emptyLongList();
      aInt_ = emptyIntList();
      aBoolean_ = emptyBooleanList();
      aString_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      aDouble_ = emptyDoubleList();
      aFloat_ = emptyFloatList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new CollectionType();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.akkw.protobuf.test.ptoto.CollectionProto.internal_static_com_akkw_protobuf_test_ptoto_CollectionType_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 7:
          return internalGetIntMap();
        case 8:
          return internalGetBooleanMap();
        case 9:
          return internalGetFloatMap();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.akkw.protobuf.test.ptoto.CollectionProto.internal_static_com_akkw_protobuf_test_ptoto_CollectionType_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.akkw.protobuf.test.ptoto.CollectionProto.CollectionType.class, com.akkw.protobuf.test.ptoto.CollectionProto.CollectionType.Builder.class);
    }

    public static final int ALONG_FIELD_NUMBER = 1;
    private com.google.protobuf.Internal.LongList aLong_;
    /**
     * <code>repeated int64 aLong = 1;</code>
     * @return A list containing the aLong.
     */
    @java.lang.Override
    public java.util.List<java.lang.Long>
        getALongList() {
      return aLong_;
    }
    /**
     * <code>repeated int64 aLong = 1;</code>
     * @return The count of aLong.
     */
    public int getALongCount() {
      return aLong_.size();
    }
    /**
     * <code>repeated int64 aLong = 1;</code>
     * @param index The index of the element to return.
     * @return The aLong at the given index.
     */
    public long getALong(int index) {
      return aLong_.getLong(index);
    }
    private int aLongMemoizedSerializedSize = -1;

    public static final int AINT_FIELD_NUMBER = 2;
    private com.google.protobuf.Internal.IntList aInt_;
    /**
     * <code>repeated int32 aInt = 2;</code>
     * @return A list containing the aInt.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getAIntList() {
      return aInt_;
    }
    /**
     * <code>repeated int32 aInt = 2;</code>
     * @return The count of aInt.
     */
    public int getAIntCount() {
      return aInt_.size();
    }
    /**
     * <code>repeated int32 aInt = 2;</code>
     * @param index The index of the element to return.
     * @return The aInt at the given index.
     */
    public int getAInt(int index) {
      return aInt_.getInt(index);
    }
    private int aIntMemoizedSerializedSize = -1;

    public static final int ABOOLEAN_FIELD_NUMBER = 3;
    private com.google.protobuf.Internal.BooleanList aBoolean_;
    /**
     * <code>repeated bool aBoolean = 3;</code>
     * @return A list containing the aBoolean.
     */
    @java.lang.Override
    public java.util.List<java.lang.Boolean>
        getABooleanList() {
      return aBoolean_;
    }
    /**
     * <code>repeated bool aBoolean = 3;</code>
     * @return The count of aBoolean.
     */
    public int getABooleanCount() {
      return aBoolean_.size();
    }
    /**
     * <code>repeated bool aBoolean = 3;</code>
     * @param index The index of the element to return.
     * @return The aBoolean at the given index.
     */
    public boolean getABoolean(int index) {
      return aBoolean_.getBoolean(index);
    }
    private int aBooleanMemoizedSerializedSize = -1;

    public static final int ASTRING_FIELD_NUMBER = 4;
    private com.google.protobuf.LazyStringList aString_;
    /**
     * <code>repeated string aString = 4;</code>
     * @return A list containing the aString.
     */
    public com.google.protobuf.ProtocolStringList
        getAStringList() {
      return aString_;
    }
    /**
     * <code>repeated string aString = 4;</code>
     * @return The count of aString.
     */
    public int getAStringCount() {
      return aString_.size();
    }
    /**
     * <code>repeated string aString = 4;</code>
     * @param index The index of the element to return.
     * @return The aString at the given index.
     */
    public java.lang.String getAString(int index) {
      return aString_.get(index);
    }
    /**
     * <code>repeated string aString = 4;</code>
     * @param index The index of the value to return.
     * @return The bytes of the aString at the given index.
     */
    public com.google.protobuf.ByteString
        getAStringBytes(int index) {
      return aString_.getByteString(index);
    }

    public static final int ADOUBLE_FIELD_NUMBER = 5;
    private com.google.protobuf.Internal.DoubleList aDouble_;
    /**
     * <code>repeated double aDouble = 5;</code>
     * @return A list containing the aDouble.
     */
    @java.lang.Override
    public java.util.List<java.lang.Double>
        getADoubleList() {
      return aDouble_;
    }
    /**
     * <code>repeated double aDouble = 5;</code>
     * @return The count of aDouble.
     */
    public int getADoubleCount() {
      return aDouble_.size();
    }
    /**
     * <code>repeated double aDouble = 5;</code>
     * @param index The index of the element to return.
     * @return The aDouble at the given index.
     */
    public double getADouble(int index) {
      return aDouble_.getDouble(index);
    }
    private int aDoubleMemoizedSerializedSize = -1;

    public static final int AFLOAT_FIELD_NUMBER = 6;
    private com.google.protobuf.Internal.FloatList aFloat_;
    /**
     * <code>repeated float aFloat = 6;</code>
     * @return A list containing the aFloat.
     */
    @java.lang.Override
    public java.util.List<java.lang.Float>
        getAFloatList() {
      return aFloat_;
    }
    /**
     * <code>repeated float aFloat = 6;</code>
     * @return The count of aFloat.
     */
    public int getAFloatCount() {
      return aFloat_.size();
    }
    /**
     * <code>repeated float aFloat = 6;</code>
     * @param index The index of the element to return.
     * @return The aFloat at the given index.
     */
    public float getAFloat(int index) {
      return aFloat_.getFloat(index);
    }
    private int aFloatMemoizedSerializedSize = -1;

    public static final int INTMAP_FIELD_NUMBER = 7;
    private static final class IntMapDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Long, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Long, java.lang.Integer>newDefaultInstance(
                  com.akkw.protobuf.test.ptoto.CollectionProto.internal_static_com_akkw_protobuf_test_ptoto_CollectionType_IntMapEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT64,
                  0L,
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0);
    }
    private com.google.protobuf.MapField<
        java.lang.Long, java.lang.Integer> intMap_;
    private com.google.protobuf.MapField<java.lang.Long, java.lang.Integer>
    internalGetIntMap() {
      if (intMap_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            IntMapDefaultEntryHolder.defaultEntry);
      }
      return intMap_;
    }

    public int getIntMapCount() {
      return internalGetIntMap().getMap().size();
    }
    /**
     * <code>map&lt;int64, int32&gt; intMap = 7;</code>
     */

    @java.lang.Override
    public boolean containsIntMap(
        long key) {
      
      return internalGetIntMap().getMap().containsKey(key);
    }
    /**
     * Use {@link #getIntMapMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Long, java.lang.Integer> getIntMap() {
      return getIntMapMap();
    }
    /**
     * <code>map&lt;int64, int32&gt; intMap = 7;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Long, java.lang.Integer> getIntMapMap() {
      return internalGetIntMap().getMap();
    }
    /**
     * <code>map&lt;int64, int32&gt; intMap = 7;</code>
     */
    @java.lang.Override

    public int getIntMapOrDefault(
        long key,
        int defaultValue) {
      
      java.util.Map<java.lang.Long, java.lang.Integer> map =
          internalGetIntMap().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int64, int32&gt; intMap = 7;</code>
     */
    @java.lang.Override

    public int getIntMapOrThrow(
        long key) {
      
      java.util.Map<java.lang.Long, java.lang.Integer> map =
          internalGetIntMap().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int BOOLEANMAP_FIELD_NUMBER = 8;
    private static final class BooleanMapDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Boolean, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Boolean, java.lang.Integer>newDefaultInstance(
                  com.akkw.protobuf.test.ptoto.CollectionProto.internal_static_com_akkw_protobuf_test_ptoto_CollectionType_BooleanMapEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.BOOL,
                  false,
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0);
    }
    private com.google.protobuf.MapField<
        java.lang.Boolean, java.lang.Integer> booleanMap_;
    private com.google.protobuf.MapField<java.lang.Boolean, java.lang.Integer>
    internalGetBooleanMap() {
      if (booleanMap_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            BooleanMapDefaultEntryHolder.defaultEntry);
      }
      return booleanMap_;
    }

    public int getBooleanMapCount() {
      return internalGetBooleanMap().getMap().size();
    }
    /**
     * <code>map&lt;bool, int32&gt; booleanMap = 8;</code>
     */

    @java.lang.Override
    public boolean containsBooleanMap(
        boolean key) {
      
      return internalGetBooleanMap().getMap().containsKey(key);
    }
    /**
     * Use {@link #getBooleanMapMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Boolean, java.lang.Integer> getBooleanMap() {
      return getBooleanMapMap();
    }
    /**
     * <code>map&lt;bool, int32&gt; booleanMap = 8;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Boolean, java.lang.Integer> getBooleanMapMap() {
      return internalGetBooleanMap().getMap();
    }
    /**
     * <code>map&lt;bool, int32&gt; booleanMap = 8;</code>
     */
    @java.lang.Override

    public int getBooleanMapOrDefault(
        boolean key,
        int defaultValue) {
      
      java.util.Map<java.lang.Boolean, java.lang.Integer> map =
          internalGetBooleanMap().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;bool, int32&gt; booleanMap = 8;</code>
     */
    @java.lang.Override

    public int getBooleanMapOrThrow(
        boolean key) {
      
      java.util.Map<java.lang.Boolean, java.lang.Integer> map =
          internalGetBooleanMap().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int FLOATMAP_FIELD_NUMBER = 9;
    private static final class FloatMapDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Double> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Double>newDefaultInstance(
                  com.akkw.protobuf.test.ptoto.CollectionProto.internal_static_com_akkw_protobuf_test_ptoto_CollectionType_FloatMapEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.DOUBLE,
                  0D);
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Double> floatMap_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Double>
    internalGetFloatMap() {
      if (floatMap_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            FloatMapDefaultEntryHolder.defaultEntry);
      }
      return floatMap_;
    }

    public int getFloatMapCount() {
      return internalGetFloatMap().getMap().size();
    }
    /**
     * <code>map&lt;int32, double&gt; floatMap = 9;</code>
     */

    @java.lang.Override
    public boolean containsFloatMap(
        int key) {
      
      return internalGetFloatMap().getMap().containsKey(key);
    }
    /**
     * Use {@link #getFloatMapMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Double> getFloatMap() {
      return getFloatMapMap();
    }
    /**
     * <code>map&lt;int32, double&gt; floatMap = 9;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Integer, java.lang.Double> getFloatMapMap() {
      return internalGetFloatMap().getMap();
    }
    /**
     * <code>map&lt;int32, double&gt; floatMap = 9;</code>
     */
    @java.lang.Override

    public double getFloatMapOrDefault(
        int key,
        double defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Double> map =
          internalGetFloatMap().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int32, double&gt; floatMap = 9;</code>
     */
    @java.lang.Override

    public double getFloatMapOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Double> map =
          internalGetFloatMap().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (getALongList().size() > 0) {
        output.writeUInt32NoTag(10);
        output.writeUInt32NoTag(aLongMemoizedSerializedSize);
      }
      for (int i = 0; i < aLong_.size(); i++) {
        output.writeInt64NoTag(aLong_.getLong(i));
      }
      if (getAIntList().size() > 0) {
        output.writeUInt32NoTag(18);
        output.writeUInt32NoTag(aIntMemoizedSerializedSize);
      }
      for (int i = 0; i < aInt_.size(); i++) {
        output.writeInt32NoTag(aInt_.getInt(i));
      }
      if (getABooleanList().size() > 0) {
        output.writeUInt32NoTag(26);
        output.writeUInt32NoTag(aBooleanMemoizedSerializedSize);
      }
      for (int i = 0; i < aBoolean_.size(); i++) {
        output.writeBoolNoTag(aBoolean_.getBoolean(i));
      }
      for (int i = 0; i < aString_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, aString_.getRaw(i));
      }
      if (getADoubleList().size() > 0) {
        output.writeUInt32NoTag(42);
        output.writeUInt32NoTag(aDoubleMemoizedSerializedSize);
      }
      for (int i = 0; i < aDouble_.size(); i++) {
        output.writeDoubleNoTag(aDouble_.getDouble(i));
      }
      if (getAFloatList().size() > 0) {
        output.writeUInt32NoTag(50);
        output.writeUInt32NoTag(aFloatMemoizedSerializedSize);
      }
      for (int i = 0; i < aFloat_.size(); i++) {
        output.writeFloatNoTag(aFloat_.getFloat(i));
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeLongMapTo(
          output,
          internalGetIntMap(),
          IntMapDefaultEntryHolder.defaultEntry,
          7);
      com.google.protobuf.GeneratedMessageV3
        .serializeBooleanMapTo(
          output,
          internalGetBooleanMap(),
          BooleanMapDefaultEntryHolder.defaultEntry,
          8);
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetFloatMap(),
          FloatMapDefaultEntryHolder.defaultEntry,
          9);
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < aLong_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(aLong_.getLong(i));
        }
        size += dataSize;
        if (!getALongList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        aLongMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < aInt_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(aInt_.getInt(i));
        }
        size += dataSize;
        if (!getAIntList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        aIntMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        dataSize = 1 * getABooleanList().size();
        size += dataSize;
        if (!getABooleanList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        aBooleanMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < aString_.size(); i++) {
          dataSize += computeStringSizeNoTag(aString_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getAStringList().size();
      }
      {
        int dataSize = 0;
        dataSize = 8 * getADoubleList().size();
        size += dataSize;
        if (!getADoubleList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        aDoubleMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        dataSize = 4 * getAFloatList().size();
        size += dataSize;
        if (!getAFloatList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        aFloatMemoizedSerializedSize = dataSize;
      }
      for (java.util.Map.Entry<java.lang.Long, java.lang.Integer> entry
           : internalGetIntMap().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Long, java.lang.Integer>
        intMap__ = IntMapDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(7, intMap__);
      }
      for (java.util.Map.Entry<java.lang.Boolean, java.lang.Integer> entry
           : internalGetBooleanMap().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Boolean, java.lang.Integer>
        booleanMap__ = BooleanMapDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(8, booleanMap__);
      }
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Double> entry
           : internalGetFloatMap().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Double>
        floatMap__ = FloatMapDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(9, floatMap__);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.akkw.protobuf.test.ptoto.CollectionProto.CollectionType)) {
        return super.equals(obj);
      }
      com.akkw.protobuf.test.ptoto.CollectionProto.CollectionType other = (com.akkw.protobuf.test.ptoto.CollectionProto.CollectionType) obj;

      if (!getALongList()
          .equals(other.getALongList())) return false;
      if (!getAIntList()
          .equals(other.getAIntList())) return false;
      if (!getABooleanList()
          .equals(other.getABooleanList())) return false;
      if (!getAStringList()
          .equals(other.getAStringList())) return false;
      if (!getADoubleList()
          .equals(other.getADoubleList())) return false;
      if (!getAFloatList()
          .equals(other.getAFloatList())) return false;
      if (!internalGetIntMap().equals(
          other.internalGetIntMap())) return false;
      if (!internalGetBooleanMap().equals(
          other.internalGetBooleanMap())) return false;
      if (!internalGetFloatMap().equals(
          other.internalGetFloatMap())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getALongCount() > 0) {
        hash = (37 * hash) + ALONG_FIELD_NUMBER;
        hash = (53 * hash) + getALongList().hashCode();
      }
      if (getAIntCount() > 0) {
        hash = (37 * hash) + AINT_FIELD_NUMBER;
        hash = (53 * hash) + getAIntList().hashCode();
      }
      if (getABooleanCount() > 0) {
        hash = (37 * hash) + ABOOLEAN_FIELD_NUMBER;
        hash = (53 * hash) + getABooleanList().hashCode();
      }
      if (getAStringCount() > 0) {
        hash = (37 * hash) + ASTRING_FIELD_NUMBER;
        hash = (53 * hash) + getAStringList().hashCode();
      }
      if (getADoubleCount() > 0) {
        hash = (37 * hash) + ADOUBLE_FIELD_NUMBER;
        hash = (53 * hash) + getADoubleList().hashCode();
      }
      if (getAFloatCount() > 0) {
        hash = (37 * hash) + AFLOAT_FIELD_NUMBER;
        hash = (53 * hash) + getAFloatList().hashCode();
      }
      if (!internalGetIntMap().getMap().isEmpty()) {
        hash = (37 * hash) + INTMAP_FIELD_NUMBER;
        hash = (53 * hash) + internalGetIntMap().hashCode();
      }
      if (!internalGetBooleanMap().getMap().isEmpty()) {
        hash = (37 * hash) + BOOLEANMAP_FIELD_NUMBER;
        hash = (53 * hash) + internalGetBooleanMap().hashCode();
      }
      if (!internalGetFloatMap().getMap().isEmpty()) {
        hash = (37 * hash) + FLOATMAP_FIELD_NUMBER;
        hash = (53 * hash) + internalGetFloatMap().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.akkw.protobuf.test.ptoto.CollectionProto.CollectionType parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.akkw.protobuf.test.ptoto.CollectionProto.CollectionType parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.akkw.protobuf.test.ptoto.CollectionProto.CollectionType parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.akkw.protobuf.test.ptoto.CollectionProto.CollectionType parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.akkw.protobuf.test.ptoto.CollectionProto.CollectionType parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.akkw.protobuf.test.ptoto.CollectionProto.CollectionType parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.akkw.protobuf.test.ptoto.CollectionProto.CollectionType parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.akkw.protobuf.test.ptoto.CollectionProto.CollectionType parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.akkw.protobuf.test.ptoto.CollectionProto.CollectionType parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.akkw.protobuf.test.ptoto.CollectionProto.CollectionType parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.akkw.protobuf.test.ptoto.CollectionProto.CollectionType parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.akkw.protobuf.test.ptoto.CollectionProto.CollectionType parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.akkw.protobuf.test.ptoto.CollectionProto.CollectionType prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *创建一个 User 对象
     * </pre>
     *
     * Protobuf type {@code com.akkw.protobuf.test.ptoto.CollectionType}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.akkw.protobuf.test.ptoto.CollectionType)
        com.akkw.protobuf.test.ptoto.CollectionProto.CollectionTypeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.akkw.protobuf.test.ptoto.CollectionProto.internal_static_com_akkw_protobuf_test_ptoto_CollectionType_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 7:
            return internalGetIntMap();
          case 8:
            return internalGetBooleanMap();
          case 9:
            return internalGetFloatMap();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 7:
            return internalGetMutableIntMap();
          case 8:
            return internalGetMutableBooleanMap();
          case 9:
            return internalGetMutableFloatMap();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.akkw.protobuf.test.ptoto.CollectionProto.internal_static_com_akkw_protobuf_test_ptoto_CollectionType_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.akkw.protobuf.test.ptoto.CollectionProto.CollectionType.class, com.akkw.protobuf.test.ptoto.CollectionProto.CollectionType.Builder.class);
      }

      // Construct using com.akkw.protobuf.test.ptoto.CollectionProto.CollectionType.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        aLong_ = emptyLongList();
        bitField0_ = (bitField0_ & ~0x00000001);
        aInt_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000002);
        aBoolean_ = emptyBooleanList();
        bitField0_ = (bitField0_ & ~0x00000004);
        aString_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        aDouble_ = emptyDoubleList();
        bitField0_ = (bitField0_ & ~0x00000010);
        aFloat_ = emptyFloatList();
        bitField0_ = (bitField0_ & ~0x00000020);
        internalGetMutableIntMap().clear();
        internalGetMutableBooleanMap().clear();
        internalGetMutableFloatMap().clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.akkw.protobuf.test.ptoto.CollectionProto.internal_static_com_akkw_protobuf_test_ptoto_CollectionType_descriptor;
      }

      @java.lang.Override
      public com.akkw.protobuf.test.ptoto.CollectionProto.CollectionType getDefaultInstanceForType() {
        return com.akkw.protobuf.test.ptoto.CollectionProto.CollectionType.getDefaultInstance();
      }

      @java.lang.Override
      public com.akkw.protobuf.test.ptoto.CollectionProto.CollectionType build() {
        com.akkw.protobuf.test.ptoto.CollectionProto.CollectionType result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.akkw.protobuf.test.ptoto.CollectionProto.CollectionType buildPartial() {
        com.akkw.protobuf.test.ptoto.CollectionProto.CollectionType result = new com.akkw.protobuf.test.ptoto.CollectionProto.CollectionType(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) != 0)) {
          aLong_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.aLong_ = aLong_;
        if (((bitField0_ & 0x00000002) != 0)) {
          aInt_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.aInt_ = aInt_;
        if (((bitField0_ & 0x00000004) != 0)) {
          aBoolean_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.aBoolean_ = aBoolean_;
        if (((bitField0_ & 0x00000008) != 0)) {
          aString_ = aString_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.aString_ = aString_;
        if (((bitField0_ & 0x00000010) != 0)) {
          aDouble_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.aDouble_ = aDouble_;
        if (((bitField0_ & 0x00000020) != 0)) {
          aFloat_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.aFloat_ = aFloat_;
        result.intMap_ = internalGetIntMap();
        result.intMap_.makeImmutable();
        result.booleanMap_ = internalGetBooleanMap();
        result.booleanMap_.makeImmutable();
        result.floatMap_ = internalGetFloatMap();
        result.floatMap_.makeImmutable();
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.akkw.protobuf.test.ptoto.CollectionProto.CollectionType) {
          return mergeFrom((com.akkw.protobuf.test.ptoto.CollectionProto.CollectionType)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.akkw.protobuf.test.ptoto.CollectionProto.CollectionType other) {
        if (other == com.akkw.protobuf.test.ptoto.CollectionProto.CollectionType.getDefaultInstance()) return this;
        if (!other.aLong_.isEmpty()) {
          if (aLong_.isEmpty()) {
            aLong_ = other.aLong_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureALongIsMutable();
            aLong_.addAll(other.aLong_);
          }
          onChanged();
        }
        if (!other.aInt_.isEmpty()) {
          if (aInt_.isEmpty()) {
            aInt_ = other.aInt_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureAIntIsMutable();
            aInt_.addAll(other.aInt_);
          }
          onChanged();
        }
        if (!other.aBoolean_.isEmpty()) {
          if (aBoolean_.isEmpty()) {
            aBoolean_ = other.aBoolean_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureABooleanIsMutable();
            aBoolean_.addAll(other.aBoolean_);
          }
          onChanged();
        }
        if (!other.aString_.isEmpty()) {
          if (aString_.isEmpty()) {
            aString_ = other.aString_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureAStringIsMutable();
            aString_.addAll(other.aString_);
          }
          onChanged();
        }
        if (!other.aDouble_.isEmpty()) {
          if (aDouble_.isEmpty()) {
            aDouble_ = other.aDouble_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureADoubleIsMutable();
            aDouble_.addAll(other.aDouble_);
          }
          onChanged();
        }
        if (!other.aFloat_.isEmpty()) {
          if (aFloat_.isEmpty()) {
            aFloat_ = other.aFloat_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureAFloatIsMutable();
            aFloat_.addAll(other.aFloat_);
          }
          onChanged();
        }
        internalGetMutableIntMap().mergeFrom(
            other.internalGetIntMap());
        internalGetMutableBooleanMap().mergeFrom(
            other.internalGetBooleanMap());
        internalGetMutableFloatMap().mergeFrom(
            other.internalGetFloatMap());
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                long v = input.readInt64();
                ensureALongIsMutable();
                aLong_.addLong(v);
                break;
              } // case 8
              case 10: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureALongIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  aLong_.addLong(input.readInt64());
                }
                input.popLimit(limit);
                break;
              } // case 10
              case 16: {
                int v = input.readInt32();
                ensureAIntIsMutable();
                aInt_.addInt(v);
                break;
              } // case 16
              case 18: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureAIntIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  aInt_.addInt(input.readInt32());
                }
                input.popLimit(limit);
                break;
              } // case 18
              case 24: {
                boolean v = input.readBool();
                ensureABooleanIsMutable();
                aBoolean_.addBoolean(v);
                break;
              } // case 24
              case 26: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureABooleanIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  aBoolean_.addBoolean(input.readBool());
                }
                input.popLimit(limit);
                break;
              } // case 26
              case 34: {
                java.lang.String s = input.readStringRequireUtf8();
                ensureAStringIsMutable();
                aString_.add(s);
                break;
              } // case 34
              case 41: {
                double v = input.readDouble();
                ensureADoubleIsMutable();
                aDouble_.addDouble(v);
                break;
              } // case 41
              case 42: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureADoubleIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  aDouble_.addDouble(input.readDouble());
                }
                input.popLimit(limit);
                break;
              } // case 42
              case 53: {
                float v = input.readFloat();
                ensureAFloatIsMutable();
                aFloat_.addFloat(v);
                break;
              } // case 53
              case 50: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureAFloatIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  aFloat_.addFloat(input.readFloat());
                }
                input.popLimit(limit);
                break;
              } // case 50
              case 58: {
                com.google.protobuf.MapEntry<java.lang.Long, java.lang.Integer>
                intMap__ = input.readMessage(
                    IntMapDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                internalGetMutableIntMap().getMutableMap().put(
                    intMap__.getKey(), intMap__.getValue());
                break;
              } // case 58
              case 66: {
                com.google.protobuf.MapEntry<java.lang.Boolean, java.lang.Integer>
                booleanMap__ = input.readMessage(
                    BooleanMapDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                internalGetMutableBooleanMap().getMutableMap().put(
                    booleanMap__.getKey(), booleanMap__.getValue());
                break;
              } // case 66
              case 74: {
                com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Double>
                floatMap__ = input.readMessage(
                    FloatMapDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                internalGetMutableFloatMap().getMutableMap().put(
                    floatMap__.getKey(), floatMap__.getValue());
                break;
              } // case 74
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.Internal.LongList aLong_ = emptyLongList();
      private void ensureALongIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          aLong_ = mutableCopy(aLong_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated int64 aLong = 1;</code>
       * @return A list containing the aLong.
       */
      public java.util.List<java.lang.Long>
          getALongList() {
        return ((bitField0_ & 0x00000001) != 0) ?
                 java.util.Collections.unmodifiableList(aLong_) : aLong_;
      }
      /**
       * <code>repeated int64 aLong = 1;</code>
       * @return The count of aLong.
       */
      public int getALongCount() {
        return aLong_.size();
      }
      /**
       * <code>repeated int64 aLong = 1;</code>
       * @param index The index of the element to return.
       * @return The aLong at the given index.
       */
      public long getALong(int index) {
        return aLong_.getLong(index);
      }
      /**
       * <code>repeated int64 aLong = 1;</code>
       * @param index The index to set the value at.
       * @param value The aLong to set.
       * @return This builder for chaining.
       */
      public Builder setALong(
          int index, long value) {
        ensureALongIsMutable();
        aLong_.setLong(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 aLong = 1;</code>
       * @param value The aLong to add.
       * @return This builder for chaining.
       */
      public Builder addALong(long value) {
        ensureALongIsMutable();
        aLong_.addLong(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 aLong = 1;</code>
       * @param values The aLong to add.
       * @return This builder for chaining.
       */
      public Builder addAllALong(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureALongIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, aLong_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 aLong = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearALong() {
        aLong_ = emptyLongList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList aInt_ = emptyIntList();
      private void ensureAIntIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          aInt_ = mutableCopy(aInt_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated int32 aInt = 2;</code>
       * @return A list containing the aInt.
       */
      public java.util.List<java.lang.Integer>
          getAIntList() {
        return ((bitField0_ & 0x00000002) != 0) ?
                 java.util.Collections.unmodifiableList(aInt_) : aInt_;
      }
      /**
       * <code>repeated int32 aInt = 2;</code>
       * @return The count of aInt.
       */
      public int getAIntCount() {
        return aInt_.size();
      }
      /**
       * <code>repeated int32 aInt = 2;</code>
       * @param index The index of the element to return.
       * @return The aInt at the given index.
       */
      public int getAInt(int index) {
        return aInt_.getInt(index);
      }
      /**
       * <code>repeated int32 aInt = 2;</code>
       * @param index The index to set the value at.
       * @param value The aInt to set.
       * @return This builder for chaining.
       */
      public Builder setAInt(
          int index, int value) {
        ensureAIntIsMutable();
        aInt_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 aInt = 2;</code>
       * @param value The aInt to add.
       * @return This builder for chaining.
       */
      public Builder addAInt(int value) {
        ensureAIntIsMutable();
        aInt_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 aInt = 2;</code>
       * @param values The aInt to add.
       * @return This builder for chaining.
       */
      public Builder addAllAInt(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureAIntIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, aInt_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 aInt = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearAInt() {
        aInt_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.BooleanList aBoolean_ = emptyBooleanList();
      private void ensureABooleanIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          aBoolean_ = mutableCopy(aBoolean_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated bool aBoolean = 3;</code>
       * @return A list containing the aBoolean.
       */
      public java.util.List<java.lang.Boolean>
          getABooleanList() {
        return ((bitField0_ & 0x00000004) != 0) ?
                 java.util.Collections.unmodifiableList(aBoolean_) : aBoolean_;
      }
      /**
       * <code>repeated bool aBoolean = 3;</code>
       * @return The count of aBoolean.
       */
      public int getABooleanCount() {
        return aBoolean_.size();
      }
      /**
       * <code>repeated bool aBoolean = 3;</code>
       * @param index The index of the element to return.
       * @return The aBoolean at the given index.
       */
      public boolean getABoolean(int index) {
        return aBoolean_.getBoolean(index);
      }
      /**
       * <code>repeated bool aBoolean = 3;</code>
       * @param index The index to set the value at.
       * @param value The aBoolean to set.
       * @return This builder for chaining.
       */
      public Builder setABoolean(
          int index, boolean value) {
        ensureABooleanIsMutable();
        aBoolean_.setBoolean(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool aBoolean = 3;</code>
       * @param value The aBoolean to add.
       * @return This builder for chaining.
       */
      public Builder addABoolean(boolean value) {
        ensureABooleanIsMutable();
        aBoolean_.addBoolean(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool aBoolean = 3;</code>
       * @param values The aBoolean to add.
       * @return This builder for chaining.
       */
      public Builder addAllABoolean(
          java.lang.Iterable<? extends java.lang.Boolean> values) {
        ensureABooleanIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, aBoolean_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool aBoolean = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearABoolean() {
        aBoolean_ = emptyBooleanList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList aString_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureAStringIsMutable() {
        if (!((bitField0_ & 0x00000008) != 0)) {
          aString_ = new com.google.protobuf.LazyStringArrayList(aString_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated string aString = 4;</code>
       * @return A list containing the aString.
       */
      public com.google.protobuf.ProtocolStringList
          getAStringList() {
        return aString_.getUnmodifiableView();
      }
      /**
       * <code>repeated string aString = 4;</code>
       * @return The count of aString.
       */
      public int getAStringCount() {
        return aString_.size();
      }
      /**
       * <code>repeated string aString = 4;</code>
       * @param index The index of the element to return.
       * @return The aString at the given index.
       */
      public java.lang.String getAString(int index) {
        return aString_.get(index);
      }
      /**
       * <code>repeated string aString = 4;</code>
       * @param index The index of the value to return.
       * @return The bytes of the aString at the given index.
       */
      public com.google.protobuf.ByteString
          getAStringBytes(int index) {
        return aString_.getByteString(index);
      }
      /**
       * <code>repeated string aString = 4;</code>
       * @param index The index to set the value at.
       * @param value The aString to set.
       * @return This builder for chaining.
       */
      public Builder setAString(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureAStringIsMutable();
        aString_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string aString = 4;</code>
       * @param value The aString to add.
       * @return This builder for chaining.
       */
      public Builder addAString(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureAStringIsMutable();
        aString_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string aString = 4;</code>
       * @param values The aString to add.
       * @return This builder for chaining.
       */
      public Builder addAllAString(
          java.lang.Iterable<java.lang.String> values) {
        ensureAStringIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, aString_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string aString = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearAString() {
        aString_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string aString = 4;</code>
       * @param value The bytes of the aString to add.
       * @return This builder for chaining.
       */
      public Builder addAStringBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureAStringIsMutable();
        aString_.add(value);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.DoubleList aDouble_ = emptyDoubleList();
      private void ensureADoubleIsMutable() {
        if (!((bitField0_ & 0x00000010) != 0)) {
          aDouble_ = mutableCopy(aDouble_);
          bitField0_ |= 0x00000010;
         }
      }
      /**
       * <code>repeated double aDouble = 5;</code>
       * @return A list containing the aDouble.
       */
      public java.util.List<java.lang.Double>
          getADoubleList() {
        return ((bitField0_ & 0x00000010) != 0) ?
                 java.util.Collections.unmodifiableList(aDouble_) : aDouble_;
      }
      /**
       * <code>repeated double aDouble = 5;</code>
       * @return The count of aDouble.
       */
      public int getADoubleCount() {
        return aDouble_.size();
      }
      /**
       * <code>repeated double aDouble = 5;</code>
       * @param index The index of the element to return.
       * @return The aDouble at the given index.
       */
      public double getADouble(int index) {
        return aDouble_.getDouble(index);
      }
      /**
       * <code>repeated double aDouble = 5;</code>
       * @param index The index to set the value at.
       * @param value The aDouble to set.
       * @return This builder for chaining.
       */
      public Builder setADouble(
          int index, double value) {
        ensureADoubleIsMutable();
        aDouble_.setDouble(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double aDouble = 5;</code>
       * @param value The aDouble to add.
       * @return This builder for chaining.
       */
      public Builder addADouble(double value) {
        ensureADoubleIsMutable();
        aDouble_.addDouble(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double aDouble = 5;</code>
       * @param values The aDouble to add.
       * @return This builder for chaining.
       */
      public Builder addAllADouble(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensureADoubleIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, aDouble_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double aDouble = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearADouble() {
        aDouble_ = emptyDoubleList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.FloatList aFloat_ = emptyFloatList();
      private void ensureAFloatIsMutable() {
        if (!((bitField0_ & 0x00000020) != 0)) {
          aFloat_ = mutableCopy(aFloat_);
          bitField0_ |= 0x00000020;
         }
      }
      /**
       * <code>repeated float aFloat = 6;</code>
       * @return A list containing the aFloat.
       */
      public java.util.List<java.lang.Float>
          getAFloatList() {
        return ((bitField0_ & 0x00000020) != 0) ?
                 java.util.Collections.unmodifiableList(aFloat_) : aFloat_;
      }
      /**
       * <code>repeated float aFloat = 6;</code>
       * @return The count of aFloat.
       */
      public int getAFloatCount() {
        return aFloat_.size();
      }
      /**
       * <code>repeated float aFloat = 6;</code>
       * @param index The index of the element to return.
       * @return The aFloat at the given index.
       */
      public float getAFloat(int index) {
        return aFloat_.getFloat(index);
      }
      /**
       * <code>repeated float aFloat = 6;</code>
       * @param index The index to set the value at.
       * @param value The aFloat to set.
       * @return This builder for chaining.
       */
      public Builder setAFloat(
          int index, float value) {
        ensureAFloatIsMutable();
        aFloat_.setFloat(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float aFloat = 6;</code>
       * @param value The aFloat to add.
       * @return This builder for chaining.
       */
      public Builder addAFloat(float value) {
        ensureAFloatIsMutable();
        aFloat_.addFloat(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float aFloat = 6;</code>
       * @param values The aFloat to add.
       * @return This builder for chaining.
       */
      public Builder addAllAFloat(
          java.lang.Iterable<? extends java.lang.Float> values) {
        ensureAFloatIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, aFloat_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float aFloat = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearAFloat() {
        aFloat_ = emptyFloatList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Long, java.lang.Integer> intMap_;
      private com.google.protobuf.MapField<java.lang.Long, java.lang.Integer>
      internalGetIntMap() {
        if (intMap_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              IntMapDefaultEntryHolder.defaultEntry);
        }
        return intMap_;
      }
      private com.google.protobuf.MapField<java.lang.Long, java.lang.Integer>
      internalGetMutableIntMap() {
        onChanged();;
        if (intMap_ == null) {
          intMap_ = com.google.protobuf.MapField.newMapField(
              IntMapDefaultEntryHolder.defaultEntry);
        }
        if (!intMap_.isMutable()) {
          intMap_ = intMap_.copy();
        }
        return intMap_;
      }

      public int getIntMapCount() {
        return internalGetIntMap().getMap().size();
      }
      /**
       * <code>map&lt;int64, int32&gt; intMap = 7;</code>
       */

      @java.lang.Override
      public boolean containsIntMap(
          long key) {
        
        return internalGetIntMap().getMap().containsKey(key);
      }
      /**
       * Use {@link #getIntMapMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Long, java.lang.Integer> getIntMap() {
        return getIntMapMap();
      }
      /**
       * <code>map&lt;int64, int32&gt; intMap = 7;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.Long, java.lang.Integer> getIntMapMap() {
        return internalGetIntMap().getMap();
      }
      /**
       * <code>map&lt;int64, int32&gt; intMap = 7;</code>
       */
      @java.lang.Override

      public int getIntMapOrDefault(
          long key,
          int defaultValue) {
        
        java.util.Map<java.lang.Long, java.lang.Integer> map =
            internalGetIntMap().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;int64, int32&gt; intMap = 7;</code>
       */
      @java.lang.Override

      public int getIntMapOrThrow(
          long key) {
        
        java.util.Map<java.lang.Long, java.lang.Integer> map =
            internalGetIntMap().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearIntMap() {
        internalGetMutableIntMap().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;int64, int32&gt; intMap = 7;</code>
       */

      public Builder removeIntMap(
          long key) {
        
        internalGetMutableIntMap().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Long, java.lang.Integer>
      getMutableIntMap() {
        return internalGetMutableIntMap().getMutableMap();
      }
      /**
       * <code>map&lt;int64, int32&gt; intMap = 7;</code>
       */
      public Builder putIntMap(
          long key,
          int value) {
        
        
        internalGetMutableIntMap().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;int64, int32&gt; intMap = 7;</code>
       */

      public Builder putAllIntMap(
          java.util.Map<java.lang.Long, java.lang.Integer> values) {
        internalGetMutableIntMap().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Boolean, java.lang.Integer> booleanMap_;
      private com.google.protobuf.MapField<java.lang.Boolean, java.lang.Integer>
      internalGetBooleanMap() {
        if (booleanMap_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              BooleanMapDefaultEntryHolder.defaultEntry);
        }
        return booleanMap_;
      }
      private com.google.protobuf.MapField<java.lang.Boolean, java.lang.Integer>
      internalGetMutableBooleanMap() {
        onChanged();;
        if (booleanMap_ == null) {
          booleanMap_ = com.google.protobuf.MapField.newMapField(
              BooleanMapDefaultEntryHolder.defaultEntry);
        }
        if (!booleanMap_.isMutable()) {
          booleanMap_ = booleanMap_.copy();
        }
        return booleanMap_;
      }

      public int getBooleanMapCount() {
        return internalGetBooleanMap().getMap().size();
      }
      /**
       * <code>map&lt;bool, int32&gt; booleanMap = 8;</code>
       */

      @java.lang.Override
      public boolean containsBooleanMap(
          boolean key) {
        
        return internalGetBooleanMap().getMap().containsKey(key);
      }
      /**
       * Use {@link #getBooleanMapMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Boolean, java.lang.Integer> getBooleanMap() {
        return getBooleanMapMap();
      }
      /**
       * <code>map&lt;bool, int32&gt; booleanMap = 8;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.Boolean, java.lang.Integer> getBooleanMapMap() {
        return internalGetBooleanMap().getMap();
      }
      /**
       * <code>map&lt;bool, int32&gt; booleanMap = 8;</code>
       */
      @java.lang.Override

      public int getBooleanMapOrDefault(
          boolean key,
          int defaultValue) {
        
        java.util.Map<java.lang.Boolean, java.lang.Integer> map =
            internalGetBooleanMap().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;bool, int32&gt; booleanMap = 8;</code>
       */
      @java.lang.Override

      public int getBooleanMapOrThrow(
          boolean key) {
        
        java.util.Map<java.lang.Boolean, java.lang.Integer> map =
            internalGetBooleanMap().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearBooleanMap() {
        internalGetMutableBooleanMap().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;bool, int32&gt; booleanMap = 8;</code>
       */

      public Builder removeBooleanMap(
          boolean key) {
        
        internalGetMutableBooleanMap().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Boolean, java.lang.Integer>
      getMutableBooleanMap() {
        return internalGetMutableBooleanMap().getMutableMap();
      }
      /**
       * <code>map&lt;bool, int32&gt; booleanMap = 8;</code>
       */
      public Builder putBooleanMap(
          boolean key,
          int value) {
        
        
        internalGetMutableBooleanMap().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;bool, int32&gt; booleanMap = 8;</code>
       */

      public Builder putAllBooleanMap(
          java.util.Map<java.lang.Boolean, java.lang.Integer> values) {
        internalGetMutableBooleanMap().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Double> floatMap_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Double>
      internalGetFloatMap() {
        if (floatMap_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              FloatMapDefaultEntryHolder.defaultEntry);
        }
        return floatMap_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Double>
      internalGetMutableFloatMap() {
        onChanged();;
        if (floatMap_ == null) {
          floatMap_ = com.google.protobuf.MapField.newMapField(
              FloatMapDefaultEntryHolder.defaultEntry);
        }
        if (!floatMap_.isMutable()) {
          floatMap_ = floatMap_.copy();
        }
        return floatMap_;
      }

      public int getFloatMapCount() {
        return internalGetFloatMap().getMap().size();
      }
      /**
       * <code>map&lt;int32, double&gt; floatMap = 9;</code>
       */

      @java.lang.Override
      public boolean containsFloatMap(
          int key) {
        
        return internalGetFloatMap().getMap().containsKey(key);
      }
      /**
       * Use {@link #getFloatMapMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Double> getFloatMap() {
        return getFloatMapMap();
      }
      /**
       * <code>map&lt;int32, double&gt; floatMap = 9;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.Integer, java.lang.Double> getFloatMapMap() {
        return internalGetFloatMap().getMap();
      }
      /**
       * <code>map&lt;int32, double&gt; floatMap = 9;</code>
       */
      @java.lang.Override

      public double getFloatMapOrDefault(
          int key,
          double defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Double> map =
            internalGetFloatMap().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;int32, double&gt; floatMap = 9;</code>
       */
      @java.lang.Override

      public double getFloatMapOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Double> map =
            internalGetFloatMap().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearFloatMap() {
        internalGetMutableFloatMap().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;int32, double&gt; floatMap = 9;</code>
       */

      public Builder removeFloatMap(
          int key) {
        
        internalGetMutableFloatMap().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Double>
      getMutableFloatMap() {
        return internalGetMutableFloatMap().getMutableMap();
      }
      /**
       * <code>map&lt;int32, double&gt; floatMap = 9;</code>
       */
      public Builder putFloatMap(
          int key,
          double value) {
        
        
        internalGetMutableFloatMap().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;int32, double&gt; floatMap = 9;</code>
       */

      public Builder putAllFloatMap(
          java.util.Map<java.lang.Integer, java.lang.Double> values) {
        internalGetMutableFloatMap().getMutableMap()
            .putAll(values);
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.akkw.protobuf.test.ptoto.CollectionType)
    }

    // @@protoc_insertion_point(class_scope:com.akkw.protobuf.test.ptoto.CollectionType)
    private static final com.akkw.protobuf.test.ptoto.CollectionProto.CollectionType DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.akkw.protobuf.test.ptoto.CollectionProto.CollectionType();
    }

    public static com.akkw.protobuf.test.ptoto.CollectionProto.CollectionType getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CollectionType>
        PARSER = new com.google.protobuf.AbstractParser<CollectionType>() {
      @java.lang.Override
      public CollectionType parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CollectionType> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CollectionType> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.akkw.protobuf.test.ptoto.CollectionProto.CollectionType getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_akkw_protobuf_test_ptoto_CollectionType_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_akkw_protobuf_test_ptoto_CollectionType_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_akkw_protobuf_test_ptoto_CollectionType_IntMapEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_akkw_protobuf_test_ptoto_CollectionType_IntMapEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_akkw_protobuf_test_ptoto_CollectionType_BooleanMapEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_akkw_protobuf_test_ptoto_CollectionType_BooleanMapEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_akkw_protobuf_test_ptoto_CollectionType_FloatMapEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_akkw_protobuf_test_ptoto_CollectionType_FloatMapEntry_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\020collection.proto\022\034com.akkw.protobuf.te" +
      "st.ptoto\"\356\003\n\016CollectionType\022\r\n\005aLong\030\001 \003" +
      "(\003\022\014\n\004aInt\030\002 \003(\005\022\020\n\010aBoolean\030\003 \003(\010\022\017\n\007aS" +
      "tring\030\004 \003(\t\022\017\n\007aDouble\030\005 \003(\001\022\016\n\006aFloat\030\006" +
      " \003(\002\022H\n\006intMap\030\007 \003(\01328.com.akkw.protobuf" +
      ".test.ptoto.CollectionType.IntMapEntry\022P" +
      "\n\nbooleanMap\030\010 \003(\0132<.com.akkw.protobuf.t" +
      "est.ptoto.CollectionType.BooleanMapEntry" +
      "\022L\n\010floatMap\030\t \003(\0132:.com.akkw.protobuf.t" +
      "est.ptoto.CollectionType.FloatMapEntry\032-" +
      "\n\013IntMapEntry\022\013\n\003key\030\001 \001(\003\022\r\n\005value\030\002 \001(" +
      "\005:\0028\001\0321\n\017BooleanMapEntry\022\013\n\003key\030\001 \001(\010\022\r\n" +
      "\005value\030\002 \001(\005:\0028\001\032/\n\rFloatMapEntry\022\013\n\003key" +
      "\030\001 \001(\005\022\r\n\005value\030\002 \001(\001:\0028\001B/\n\034com.akkw.pr" +
      "otobuf.test.ptotoB\017CollectionProtob\006prot" +
      "o3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_com_akkw_protobuf_test_ptoto_CollectionType_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_com_akkw_protobuf_test_ptoto_CollectionType_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_akkw_protobuf_test_ptoto_CollectionType_descriptor,
        new java.lang.String[] { "ALong", "AInt", "ABoolean", "AString", "ADouble", "AFloat", "IntMap", "BooleanMap", "FloatMap", });
    internal_static_com_akkw_protobuf_test_ptoto_CollectionType_IntMapEntry_descriptor =
      internal_static_com_akkw_protobuf_test_ptoto_CollectionType_descriptor.getNestedTypes().get(0);
    internal_static_com_akkw_protobuf_test_ptoto_CollectionType_IntMapEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_akkw_protobuf_test_ptoto_CollectionType_IntMapEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_com_akkw_protobuf_test_ptoto_CollectionType_BooleanMapEntry_descriptor =
      internal_static_com_akkw_protobuf_test_ptoto_CollectionType_descriptor.getNestedTypes().get(1);
    internal_static_com_akkw_protobuf_test_ptoto_CollectionType_BooleanMapEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_akkw_protobuf_test_ptoto_CollectionType_BooleanMapEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_com_akkw_protobuf_test_ptoto_CollectionType_FloatMapEntry_descriptor =
      internal_static_com_akkw_protobuf_test_ptoto_CollectionType_descriptor.getNestedTypes().get(2);
    internal_static_com_akkw_protobuf_test_ptoto_CollectionType_FloatMapEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_akkw_protobuf_test_ptoto_CollectionType_FloatMapEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
